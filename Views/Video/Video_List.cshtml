@model IEnumerable<study4_be.Models.ViewModel.VideoListViewModel>


<style>
    .item {
        overflow: hidden;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 2;
        max-width: 100px
    }

    .text-btn-admin {
        text-decoration: none;
        color: white;
    }

    .search__input {
        width: 100%;
        padding: 10px;
    }

    .adSearch__container {
        display: flex;
        margin: 20px 0px;
    }

    #searchByLessonTitle, #searchByCourseName {
        margin: 0px 10px;
        max-width: 50px;
    }

</style>

<h2 style="text-align:center">LIST VIDEOS</h2>
<input id="searchInput" class="search__input col-11" type="text" placeholder="Search anything you want..." />
<div class="adSearch__container">
    <span>Lesson Title: </span>
    <select id="searchByLessonTitle">
        <option value="">All</option>
    </select>
    <span>Course Name: </span>
    <select id="searchByCourseName">
        <option value="">All</option>
    </select>
</div>
<button class="btn btn-block btn-lg btn-gradient-primary mt-4"> @Html.ActionLink("+ Add Video", "Video_Create", "Video", null, new { @class = "text-btn-admin" })</button>
<div class="card">
    <div class="card-body">
        <table class="table">
            <thead class="table-info">
                <tr>
                    <th>Video Id</th>
                    <th>Video Url</th>
                    <th>Lesson Title</th>
                    <th>Course Name</th>
                    <th>Options</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var video in Model)
                {
                    <tr>
                        <td class="item">
                            <p>@video.video.VideoId</p>
                        </td>
                        <td class="item">
                            <p>@video.video.VideoUrl</p>
                        </td>
                        <td class="item">
                            <p>@video.lessonTittle</p>
                        </td>
                        <td class="item">
                            <p>@video.courseName</p>
                        </td>
                        <td>
                            <a href="@Url.ActionLink("Video_Edit","Video",new { id = video.video.VideoId })" class="text-link-action">Sửa</a>
                            <span style="padding:0 8px">|</span>
                            <a href="@Url.ActionLink("Video_Delete","Video",new { id = video.video.VideoId })" class="text-link-action">Xóa</a>
                            <span style="padding:0 8px">|</span>
                            <a href="@Url.ActionLink("Video_Details","Video",new { id = video.video.VideoId })" class="text-link-action">Chi tiết</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    function getUniqueValues(columnIndex) {
        var values = [];
        var table = document.querySelector('.table tbody');
        var tr = table.getElementsByTagName('tr');

        for (var i = 0; i < tr.length; i++) {
            var td = tr[i].getElementsByTagName('td')[columnIndex];
            if (td) {
                var txtValue = td.textContent || td.innerText;
                if (values.indexOf(txtValue) === -1) {
                    values.push(txtValue);
                }
            }
        }
        return values.sort();
    }

    function populateSelect(id, values) {
        var select = document.getElementById(id);
        values.forEach(function (value) {
            var option = document.createElement('option');
            option.text = value;
            option.value = value;
            select.add(option);
        });
    }

    function populateDropdowns() {
        populateSelect('searchByLessonTitle', getUniqueValues(2));
        populateSelect('searchByCourseName', getUniqueValues(3));
    }

    function filterTable() {
        var searchInput = document.getElementById('searchInput').value.toUpperCase();
        var searchByLessonTitle = document.getElementById('searchByLessonTitle').value.toUpperCase();
        var searchByCourseName = document.getElementById('searchByCourseName').value.toUpperCase();

        var table = document.querySelector('.table tbody');
        var tr = table.getElementsByTagName('tr');

        for (var i = 0; i < tr.length; i++) {
            var tdVideoId = tr[i].getElementsByTagName('td')[0];
            var tdLessonTitle = tr[i].getElementsByTagName('td')[2];
            var tdCourseName = tr[i].getElementsByTagName('td')[3];

            if (tdVideoId || tdLessonTitle || tdCourseName) {
                var txtValueVideoId = tdVideoId.textContent || tdVideoId.innerText;
                var txtValueLessonTitle = tdLessonTitle.textContent || tdLessonTitle.innerText;
                var txtValueCourseName = tdCourseName.textContent || tdCourseName.innerText;

                if (
                    (txtValueVideoId.toUpperCase().indexOf(searchInput) > -1 || !searchInput) &&
                    (txtValueLessonTitle.toUpperCase().indexOf(searchByLessonTitle) > -1 || !searchByLessonTitle) &&
                    (txtValueCourseName.toUpperCase().indexOf(searchByCourseName) > -1 || !searchByCourseName)
                ) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    document.getElementById('searchInput').addEventListener('keyup', filterTable);
    document.getElementById('searchByLessonTitle').addEventListener('change', filterTable);
    document.getElementById('searchByCourseName').addEventListener('change', filterTable);

    document.addEventListener('DOMContentLoaded', populateDropdowns);
</script>